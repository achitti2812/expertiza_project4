---
openapi: 3.0.1
info:
  title: EXPERTIZA API V1
  version: v1

components:
  schemas:
    Participant:
      type: "object"
      properties:
        user_id:
          type: "integer"
          format: "int64"
          description: "The ID of the user participating in the assignment"
        assignment_id:
          type: "integer"
          format: "int64"
          description: "The ID of the assignment this participant is associated with"
        created_at:
          type: "string"
          format: "date-time"
          description: "The date and time when the participant record was created"
        updated_at:
          type: "string"
          format: "date-time"
          description: "The date and time when the participant record was last updated"
        type:
          type: "string"
          description: "The type or role of the participant within the assignment context"
      required:
      - user_id
      - assignment_id
      - type
    Assignment:
      type: "object"
      properties:
        name:
          type: "string"
        directory_path:
          type: "string"
        submitter_count:
          type: "integer"
        course_id:
          type: "integer"
        instructor_id:
          type: "integer"
        private:
          type: "boolean"
        num_reviews:
          type: "integer"
        num_review_of_reviews:
          type: "integer"
        num_review_of_reviewers:
          type: "integer"
        reviews_visible_to_all:
          type: "boolean"
        num_reviewers:
          type: "integer"
        spec_location:
          type: "string"
        max_team_size:
          type: "integer"
        staggered_deadline:
          type: "boolean"
        allow_suggestions:
          type: "boolean"
        days_between_submissions:
          type: "integer"
        review_assignment_strategy:
          type: "string"
        max_reviews_per_submission:
          type: "integer"
        review_topic_threshold:
          type: "integer"
        copy_flag:
          type: "boolean"
        rounds_of_reviews:
          type: "integer"
        microtask:
          type: "boolean"
        require_quiz:
          type: "boolean"
        num_quiz_questions:
          type: "integer"
        is_coding_assignment:
          type: "boolean"
        is_intelligent:
          type: "boolean"
        calculate_penalty:
          type: "boolean"
        late_policy_id:
          type: "integer"
        is_penalty_calculated:
          type: "boolean"
        max_bids:
          type: "integer"
        show_teammate_reviews:
          type: "boolean"
        availability_flag:
          type: "boolean"
        use_bookmark:
          type: "boolean"
        can_review_same_topic:
          type: "boolean"
        can_choose_topic_to_review:
          type: "boolean"
        is_calibrated:
          type: "boolean"
        is_selfreview_enabled:
          type: "boolean"
        reputation_algorithm:
          type: "string"
        is_anonymous:
          type: "boolean"
        num_reviews_required:
          type: "integer"
        num_metareviews_required:
          type: "integer"
        num_metareviews_allowed:
          type: "integer"
        num_reviews_allowed:
          type: "integer"
        simicheck:
          type: "integer"
        simicheck_threshold:
          type: "integer"
        is_answer_tagging_allowed:
          type: "boolean"
        has_badge:
          type: "boolean"
        allow_selecting_additional_reviews_after_1st_round:
          type: "boolean"
        sample_assignment_id:
          type: "integer"
        created_at:
          type: "string"
          format: "date-time"
        updated_at:
          type: "string"
          format: "date-time"
      required:
      - name
      - course_id
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:

  "/api/v1/assignments":
    get:
      summary: "List all assignments"
      tags:
      - "Assignments"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Assignment"
    post:
      summary: "Create a new assignment"
      tags:
      - "Assignments"
      description: "Create a new assignment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assignment"
      responses:
        '201':
          description: "Assignment created successfully"

  "/api/v1/assignments/{id}":
    parameters:
    - name: "id"
      in: "path"
      description: "Unique identifier of the assignment"
      required: true
      schema:
        type: "integer"
    get:
      summary: "Get an assignment by ID"
      tags:
      - "Assignments"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assignment"
    patch:
      summary: "Update an assignment"
      tags:
      - "Assignments"
      description: "Update an assignment"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Assignment"
      responses:
        '200':
          description: "Assignment updated successfully"
    delete:
      summary: "Delete an assignment"
      tags:
      - "Assignments"
      responses:
        '204':
          description: "Assignment deleted successfully"
  
  "/api/v1/assignments/{assignment_id}/participants":
    get:
      summary: "List all participants for a specific assignment"
      tags:
      - "Participants"
      description: "Retrieve a list of participants for a given assignment ID."
      parameters:
      - name: "assignment_id"
        in: "path"
        required: true
        description: "The ID of the assignment to retrieve participants for."
        schema:
          type: "integer"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Participant"

  
  "/api/v1/account_requests/pending":
    get:
      summary: List all Pending Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Pending Account Requests
  "/api/v1/account_requests/processed":
    get:
      summary: List all Processed Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Processed Account Requests
  "/api/v1/account_requests":
    post:
      summary: Create Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '201':
          description: Create an Account Request whose email already exists in Users
            table
        '422':
          description: Attempt to Create an Account Request whose username already
            exists in Users table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
              required:
              - username
              - full_name
              - email
              - introduction
              - role_id
              - institution_id
  "/api/v1/account_requests/{id}":
    parameters:
    - name: id
      in: path
      description: id of the Account Request
      required: true
      schema:
        type: integer
    get:
      summary: Show a specific Account Request by id
      tags:
      - Account Requests
      responses:
        '200':
          description: Retrieve a specific account request with valid id
    patch:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in Patch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    put:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in PUT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    delete:
      summary: Delete Account Request
      tags:
      - Account Requests
      responses:
        '204':
          description: successful

  "/api/v1/participants":
    get:
      summary: List all participants
      tags:
      - Participants
      responses:
        '200':
          description: Successful
    post:
      summary: Create a new participant
      tags:
      - Participants
      description: Create a new participant
      parameters: []
      responses:
        '201':
          description: Successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                assignment_id:
                  type: integer
                type:
                  type: string
              required:
              - user_id
              - assignment_id
              - type

  "/api/v1/participants/{id}":
    parameters:
    - name: id
      in: path
      description: Unique identifier of the participant
      required: true
      schema:
        type: integer
    get:
      summary: Get a participant by ID
      tags:
      - Participants
      responses:
        '200':
          description: Successful
    patch:
      summary: Update a participant
      tags:
      - Participants
      description: Update a participant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                assignment_id:
                  type: integer
                type:
                  type: string
    delete:
      summary: Delete a participant
      tags:
      - Participants
      responses:
        '200':
          description: Successful

  "/api/v1/courses/{id}/add_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: ta_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: add_ta course
      tags:
      - Courses
      responses:
        '201':
          description: successful
  "/api/v1/courses/{id}/tas":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: view_tas course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/remove_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: ta_id
      in: path
      description: ta_id
      required: true
      schema:
        type: string
    get:
      summary: remove_ta course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/copy":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: copy course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required:
              - name
              - directory_path
              - institution_id
              - instructor_id
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
    patch:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    put:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    delete:
      summary: delete course
      tags:
      - Courses
      responses:
        '204':
          description: successful
  "/api/v1/institutions":
    get:
      summary: list institutions
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    post:
      summary: create institution
      tags:
      - Institutions
      parameters: []
      responses:
        '201':
          description: Created a institution
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/institutions/{id}":
    parameters:
    - name: id
      in: path
      description: id of the institution
      required: true
      schema:
        type: integer
    get:
      summary: show institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    patch:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    put:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
  "/api/v1/invitations":
    get:
      summary: list invitations
      tags:
      - Invitations
      responses:
        '200':
          description: Success
    post:
      summary: create invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '201':
          description: Create successful
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignment_id:
                  type: integer
                from_id:
                  type: integer
                to_id:
                  type: integer
                reply_status:
                  type: string
              required:
              - assignment_id
              - from_id
              - to_id
  "/api/v1/invitations/{id}":
    parameters:
    - name: id
      in: path
      description: id of the invitation
      required: true
      schema:
        type: integer
    get:
      summary: show invitation
      tags:
      - Invitations
      responses:
        '200':
          description: Show invitation
        '404':
          description: Not found
    patch:
      summary: update invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '200':
          description: Update successful
        '422':
          description: Invalid request
        '404':
          description: Not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_status:
                  type: string
              required: []
    delete:
      summary: Delete invitation
      tags:
      - Invitations
      responses:
        '204':
          description: Delete successful
        '404':
          description: Not found
  "/api/v1/invitations/user/{user_id}/assignment/{assignment_id}":
    parameters:
    - name: user_id
      in: path
      description: id of user
      required: true
      schema:
        type: integer
    - name: assignment_id
      in: path
      description: id of assignment
      required: true
      schema:
        type: integer
    get:
      summary: Show all invitation for the given user and assignment
      tags:
      - Invitations
      responses:
        '200':
          description: Show all invitations for the user for an assignment
        '404':
          description: Not found
  "/api/v1/questionnaires":
    get:
      summary: list questionnaires
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
    post:
      summary: create questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                questionnaire_type:
                  type: string
                private:
                  type: boolean
                min_question_score:
                  type: integer
                max_question_score:
                  type: integer
                instructor_id:
                  type: integer
              required:
              - id
              - name
              - questionnaire_type
              - private
              - min_question_score
              - max_question_score
              - instructor_id
  "/api/v1/questionnaires/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    patch:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    delete:
      summary: delete questionnaire
      tags:
      - Questionnaires
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/toggle_access/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: toggle access
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/copy/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: copy questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions":
    get:
      summary: list questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
    post:
      summary: create question
      tags:
      - Questions
      parameters: []
      responses:
        '201':
          description: created
        '404':
          description: questionnaire id not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: integer
                questionnaire_id:
                  type: integer
                break_before:
                  type: boolean
                txt:
                  type: string
                question_type:
                  type: string
              required:
              - weight
              - questionnaire_id
              - break_before
              - txt
              - question_type
  "/api/v1/questions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show question
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    patch:
      summary: update question
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    delete:
      summary: delete question
      tags:
      - Questions
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/delete_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    delete:
      summary: delete all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/show_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/types":
    get:
      summary: question types
      tags:
      - Questions
      responses:
        '200':
          description: successful
  "/api/v1/roles":
    get:
      summary: list roles
      tags:
      - Roles
      responses:
        '200':
          description: successful
    post:
      summary: create role
      tags:
      - Roles
      parameters: []
      responses:
        '201':
          description: Created a role
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
  "/api/v1/roles/{id}":
    parameters:
    - name: id
      in: path
      description: id of the role
      required: true
      schema:
        type: integer
    get:
      summary: show role
      tags:
      - Roles
      responses:
        '200':
          description: successful
    patch:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    put:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    delete:
      summary: delete role
      tags:
      - Roles
      responses:
        '204':
          description: successful
  "/api/v1/sign_up_topics":
    get:
      summary: Get sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        description: Topic Identifier
        required: false
        schema:
          type: string
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    delete:
      summary: Delete sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        items:
          type: string
        description: Topic Identifiers to delete
        required: false
        schema:
          type: array
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    post:
      summary: create a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '201':
          description: Success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - max_choosers
              - category
              - assignment_id
              - micropayment
  "/api/v1/sign_up_topics/{id}":
    parameters:
    - name: id
      in: path
      description: id of the sign up topic
      required: true
      schema:
        type: integer
    put:
      summary: update a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - category
              - assignment_id
  "/api/v1/signed_up_teams/sign_up":
    post:
      summary: Creates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: integer
                topic_id:
                  type: integer
              required:
              - team_id
              - topic_id
  "/api/v1/signed_up_teams/sign_up_student":
    parameters:
    - name: user_id
      in: query
      description: User ID
      required: true
      schema:
        type: integer
    post:
      summary: Creates a signed up team by student
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_id:
                  type: integer
              required:
              - topic_id
  "/api/v1/signed_up_teams":
    parameters:
    - name: topic_id
      in: query
      description: Topic ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves signed up teams
      tags:
      - SignedUpTeams
      responses:
        '200':
          description: signed up teams found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  topic_id:
                    type: integer
                  team_id:
                    type: integer
                  is_waitlisted:
                    type: boolean
                  preference_priority_number:
                    type: integer
                required:
                - id
                - topic_id
                - team_id
                - is_waitlisted
                - preference_priority_number
        '404':
          description: signed up teams not found
  "/api/v1/signed_up_teams/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    put:
      summary: Updates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '200':
          description: signed up team updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_waitlisted:
                  type: boolean
                preference_priority_number:
                  type: integer
    delete:
      summary: Deletes a signed up team
      tags:
      - SignedUpTeams
      responses:
        '204':
          description: signed up team deleted
        '422':
          description: invalid request
  "/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful login
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              required:
              - user_name
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
